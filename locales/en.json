{
  "menu": {
    "services": "Services",
    "portfolio": "Portfolio",
    "contacts": "Contacts"
  },
  "index": {
    "header": "Anatoly Garkusha",
    "caption": "Backend developer, DevOps engineer",
    "description": "",
    "servicesHeader": "I provide these services",
    "services": [
      {
        "title": "Проектирование архитектуры",
        "description": "Спроектирую архитектуру сложного проекта по техническому заданию"
      },
      {
        "title": "API",
        "description": "Разработаю api для web приложения или мобильного приложения"
      },
      {
        "title": "Автоматизация",
        "description": "Напишу скрипт, парсер или бот для телеграм, вкотнакте"
      },
      {
        "title": "Docker",
        "description": "Внедрение в проект поддержки docker-контейнеров"
      },
      {
        "title": "CI/CD pipeline",
        "description": "Запущу процесс ci/cd pipeline на проекте"
      },
      {
        "title": "DevOps",
        "description": "Внедрю практики DevOps"
      }
    ],
    "contacts": {
      "header": "Contact with me",
      "phone": "+7 (938) 434-55-68",
      "email": "memclutter@gmail.com"
    },
    "portfolio": {
      "header": "Portfolio",
      "cards": [
        {
          "title": "FLOGmall. Площадка для\nкупли/продажи за криптовалюты (ICO)"
        },
        {
          "title": "DapCar. Crypto game (DApp)"
        },
        {
          "title": "Mobpirate.com. Сервис продажи рекламы в мобильных приложениях"
        },
        {
          "title": "Ajax.Partners. Сервис монетизации мобильных приложений"
        },
        {
          "title": "Rumetr. Живая база новостроек Москвы и МО"
        },
        {
          "title": "Globesailor. Система монитинга клиентских предпочтений"
        }
      ]
    }
  },
  "portfolio": {
    "flogmall": {
      "title": "FLOGmall. Площадка для\nкупли/продажи за криптовалюты (ICO)",
      "description": "Площадка позволяет \n\n- создать аккаунт продавца или покупателя\n- продавцам выкладывать объявления на продажу \n- покупателям искать и покупать нужные им товары за криптовалюту\n- использовать внутренюю криптовалюту MLC\n \nВыполненые задачи:\n\n- Разработать ЛК для инвесторов (ICO)\n- Спроектировать микросервисную архитектуру\n- Создать REST api для web-приложения на react\n- Обеспечен полный цикл DevOps\n- Ведение базы знаний по проекту\n- Разработка внутренних инструментов для нужд компании\n\nИспользуемые технологии:\n\n- revel/fasthttp (golang)\n- react.js\n- mongodb, postgres, redis\n- rabbitmq\n- docker/bitbucket pipelines, aws, digitalocean"
    },
    "dapcar": {
      "title": "DapCar. Crypto game (DApp)",
      "description": "Мультиплеер игра следующего поколения, основанная на технологии блокчейн. \n\nВыполненые задачи:\n\n- Спроектирована архитектура, позволяющая связать react веб-приложение, ethereum-блокчейн и некоторые микросервисы\n- Разработать инструмент управления ресурсами игры\n- Реализация авторизации через metamask\n- Пайплайн обработки событий из смарт-контракта\n- Разработка REST api для react web-приложения (включая web-socket)\n- Обеспечен полный цикл DevOps\n- Ведение базы знаний по проекту\n- Разработка внутренних инструментов для нужд компании\n\nИспользуемые технологии:\n\n- gin/fasthttp (golang)\n- django (python)\n- react.js\n- mongodb, postgres, redis\n- rabbitmq\n- docker, gitlab ci/cd, aws, digitalocean"
    },
    "mobile-pirate": {
      "title": "Mobpirate.com. Сервис продажи рекламы в мобильных приложениях",
      "description": "Приложения получают рекламный feed с сервера и показывают рекламу. \nСтатистика просмотров рекламы отправляется в любой наиболее удобный tracking-сервис (через postback). \n\nВыполненые задачи:\n\n- Спроектирована архитектура под highload \n- Верстка и программирование ui по макетам заказчика\n- Разработка REST api для vue web-приложения\n- Разработан сервис генерации рекламных feed'ов\n- Postback-сервис\n- Управление доступом на основе ролей (RBAC)\n- Обеспечен полный цикл DevOps\n- Ведение базы знаний по проекту\n\nИспользуемые технологии:\n\n- echo (golang)\n- vue\n- mongodb, redis\n- nsq\n- docker, gitlab ci/cd, digitalocean"
    },
    "ajax-partners": {
      "title": "Ajax.Partners. Сервис монетизации мобильных приложений",
      "description": "Разработчик приложения добавляет свое приложение в партнерскую сеть.\nВеб-мастера выбирают приложение на которое они хотят направить трафик, \nпосле получает уникальную ссылку (сгенерированную сервисом) и использует ее в своих рекламных кампаниях.\n\nВыполненые задачи:\n\n- Спроектирована архитектура под highload \n- Верстка и программирование ui по макетам заказчика\n- Разработка REST api для vue web-приложения\n- Разработан сервис генерации уникальных ссылок\n- Обеспечен полный цикл DevOps\n- Ведение базы знаний по проекту\n\nИспользуемые технологии:\n\n- echo (golang)\n- vue\n- mongodb, redis\n- nsq\n- docker, gitlab ci/cd, digitalocean"
    },
    "rumetr": {
      "title": "Rumetr. Живая база новостроек Москвы и МО",
      "description": "Сервис собирает и агрегирует данные от реальных застройщиков и продавцов недвижимости, обратаывает их и дополняет. \nСобранные данные предоставлены в удобном и понятном людям виде. База ежедневно обновляется. \n\nВыполненые задачи:\n\n- Произведена доробатка интерфейса администратора (django)\n- Произведена доработка endpoint для сбора новых данных\n- Написано около ~25 парсеров под каждого интересного застройщика\n\nИспользуемые технологии:\n\n- django (python3.6)\n- scrapy (python3.6)\n- docker "
    },
    "globe-sailor": {
      "title": "Globesailor. Система монитинга клиентских предпочтений",
      "description": "Globe Sailor. Сервис бронирования яхт. Требовалось создать систему оценки клиентских предпочтений на основе отзывов о яхтах.\n\nВыполненые задачи:\n\n- Разработан scrapy скрипт для сбора отзывов о яхтах с выгрузкой в xlsx\n- Разработан скрипт анализа данных и текста отзывов для составления оценки по яхте\n- Проект упакован в docker и настроен планировщик запуска \n- Обеспечен полный цикл DevOps\n\nИспользуемые технологии:\n\n- scrapy (python3.6)\n- nltk (python3.6)\n- docker\n "
    }
  }
}
